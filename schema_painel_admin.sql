-- Tabela para Moedas (atividades que geram créditos)
CREATE TABLE public.currencies (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) NOT NULL,
  name TEXT NOT NULL,
  value INTEGER NOT NULL,
  created_at TIMESTAMMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);
ALTER TABLE public.currencies ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Usuários podem ver e adicionar suas próprias moedas" ON public.currencies FOR ALL USING (auth.uid() = user_id) WITH CHECK (auth.uid() = user_id);

-- Tabela para Dívidas (atividades que geram débitos)
CREATE TABLE public.debts (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) NOT NULL,
  name TEXT NOT NULL,
  value INTEGER NOT NULL,
  created_at TIMESTAMMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);
ALTER TABLE public.debts ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Usuários podem ver e adicionar suas próprias dívidas" ON public.debts FOR ALL USING (auth.uid() = user_id) WITH CHECK (auth.uid() = user_id);

-- Tabela para Créditos (recompensas que podem ser resgatadas)
CREATE TABLE public.credits (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  user_id UUID REFERENCES auth.users(id) NOT NULL,
  name TEXT NOT NULL,
  value INTEGER NOT NULL,
  created_at TIMESTAMMP WITH TIME ZONE DEFAULT timezone('utc'::text, now()) NOT NULL
);
ALTER TABLE public.credits ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Usuários podem ver e adicionar seus próprios créditos" ON public.credits FOR ALL USING (auth.uid() = user_id) WITH CHECK (auth.uid() = user_id);
